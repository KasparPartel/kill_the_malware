package main

import (
	"fmt"
	"log"
	"os"
	"os/exec"
	"regexp"
	"strconv"

	"golang.org/x/sys/windows/registry"
)

type RegistryObject struct {
	Key  registry.Key
	Path string
}

func openLogFile() *os.File {
	logFile, err := os.OpenFile(
		"log.log",
		os.O_CREATE|os.O_APPEND|os.O_WRONLY,
		0666,
	)
	if err != nil {
		log.Fatal(err)
	}
	return logFile
}

func getPID(processName string) (int, error) {
	cmd := exec.Command("cmd", "/C", "tasklist", "/fo", "CSV", "/nh")
	out, err := cmd.Output()
	if err != nil {
		return -1, fmt.Errorf("error running tasklist: %s", err.Error())
	}

	re := regexp.MustCompile(fmt.Sprintf(`"%s","(\d+)`, processName))
	capturingGroups := re.FindStringSubmatch(string(out))

	if len(capturingGroups) < 2 {
		return -1, fmt.Errorf("PID not found")
	}

	pidInt, err := strconv.Atoi(capturingGroups[1])
	if err != nil {
		return -1, fmt.Errorf("PID not available: %s", err.Error())
	}

	return pidInt, nil
}

func editRegistries(registryKeys []RegistryObject) {
	for _, regKey := range registryKeys {
		k, err := registry.OpenKey(
			regKey.Key,
			regKey.Path,
			registry.WRITE,
		)
		if err != nil {
			log.Println("couldn't find the registry key: ", err)
		}
		defer k.Close()

		err = k.DeleteValue("Mal-Track")
		if err != nil {
			log.Println("couldn't find the value: ", err)
		}
	}
}

func main() {
	// Logging
	logFile := openLogFile()
	defer logFile.Close()
	log.SetOutput(logFile)

	processName := "mal-track.exe"
	fmt.Println("The attackers IP address is 127.0.0.1")
	pid, err := getPID(processName)
	if err != nil {
		log.Println(err)
	}

	if pid != -1 {
		process, err := os.FindProcess(pid)
		if err != nil {
			log.Println(err)
		}

		process.Kill()
	}

	registryKeys := []RegistryObject{
		{registry.CURRENT_USER, `Software\Microsoft\Windows\CurrentVersion\Run`},
		{registry.CURRENT_USER, `Software\Microsoft\Windows\CurrentVersion\RunOnce`},
		{registry.LOCAL_MACHINE, `Software\Microsoft\Windows\CurrentVersion\Run`},
		{registry.LOCAL_MACHINE, `Software\Microsoft\Windows\CurrentVersion\RunOnce`},
	}

	editRegistries(registryKeys)
}
