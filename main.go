package main

import (
	"errors"
	"fmt"
	"os/exec"
	"regexp"
	"strconv"
)

func getPID(processName string) (int, error) {
	cmd := exec.Command("cmd", "/C", "tasklist", "/fo", "CSV", "/nh")
	out, err := cmd.Output()
	if err != nil {
		return -1, errors.New(fmt.Sprintf("Error running tasklist: %s", err.Error()))
	}

	re := regexp.MustCompile(fmt.Sprintf(`"%s","(\d+)`, processName))
	capturingGroups := re.FindStringSubmatch(string(out))

	if len(capturingGroups) < 2 {
		return -1, errors.New(fmt.Sprintf("PID not found"))
	}

	pidInt, err := strconv.Atoi(capturingGroups[1])
	if err != nil {
		return -1, errors.New(fmt.Sprintf("PID not available: %s", err.Error()))
	}

	return pidInt, nil
}

func main() {
	processName := "brave"
	// processName := "maltrack.exe"
	fmt.Println("Getting pid of", processName)
	pid, err := getPID(processName)
	if err != nil {
		fmt.Println(err)
	}
	fmt.Println(pid)
}
